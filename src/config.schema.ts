// Generated by ts-to-effect-schema
import * as S from "@effect/schema/Schema";
import { pipe } from "@effect/data/Function";

export const simplifiedJSDocTagSchema = S.struct({
  name: S.string,
  value: S.optional(S.string),
});

export const getSchemaNameSchema = S.any;

export const nameFilterSchema = S.any;

export const jSDocTagFilterSchema = S.any;

export const configSchema = S.struct({
  input: S.string,
  output: S.string,
  skipValidation: S.optional(S.boolean),
  nameFilter: S.optional(nameFilterSchema),
  jsDocTagFilter: S.optional(jSDocTagFilterSchema),
  getSchemaName: S.optional(getSchemaNameSchema),
  keepComments: S.optional(S.boolean).withDefault(() => false),
  skipParseJSDoc: S.optional(S.boolean).withDefault(() => false),
  inferredTypes: S.optional(S.string),
});

export const configsSchema = S.array(
  pipe(
    configSchema,
    S.extend(
      S.struct({
        name: S.string,
      })
    )
  )
);

export const tsToEffectConfigSchema = S.union(configSchema, configsSchema);
